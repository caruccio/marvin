- name: "ConfigMap with no sensitive keys and values"
  pass: true
  input: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config
    data:
      config: value
      foo: bar
      file.yaml: content

- name: "ConfigMap with no data"
  pass: true
  input: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config

- name: "ConfigMap with empty data"
  pass: true
  input: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config
    data: {}

- name: "ConfigMap with sensitive key"
  pass: false
  message: "ConfigMap could be storing sensitive data"
  input: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config
    data:
      config: value
      key: value

- name: "ConfigMap with sensitive value"
  pass: false
  message: "ConfigMap could be storing sensitive data"
  input: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config
    data:
      foo: bar
      config: "PRIVATE KEY"

- name: "Container with no env"
  pass: true
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
      selector:
        matchLabels:
          app: nginx

- name: "Container with empty env"
  pass: true
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              env: []
      selector:
        matchLabels:
          app: nginx

- name: "Container with no sensitive env"
  pass: true
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              env:
                - name: foo
                  value: bar
      selector:
        matchLabels:
          app: nginx

- name: "Container with sensitive env name"
  pass: false
  message: "Container could be storing sensitive data as environment variable"
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              env:
                - name: foo
                  value: bar
                - name: key
                  value: bar
      selector:
        matchLabels:
          app: nginx

- name: "Container with sensitive env value"
  pass: false
  message: "Container could be storing sensitive data as environment variable"
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              env:
                - name: foo
                  value: "Bearer token"
      selector:
        matchLabels:
          app: nginx
