# Copyright 2023 Undistro Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: "ConfigMap with no sensitive keys and values"
  pass: true
  input: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config
    data:
      config: value
      foo: bar
      file.yaml: content

- name: "ConfigMap with no data"
  pass: true
  input: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config

- name: "ConfigMap with empty data"
  pass: true
  input: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config
    data: {}

- name: "ConfigMap with sensitive key"
  pass: false
  message: "ConfigMap could be storing sensitive data"
  input: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config
    data:
      config: value
      key: value

- name: "ConfigMap with sensitive value"
  pass: false
  message: "ConfigMap could be storing sensitive data"
  input: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config
    data:
      foo: bar
      config: "PRIVATE KEY"

- name: "Container with no env"
  pass: true
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
      selector:
        matchLabels:
          app: nginx

- name: "Container with empty env"
  pass: true
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              env: []
      selector:
        matchLabels:
          app: nginx

- name: "Container with no sensitive env"
  pass: true
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              env:
                - name: foo
                  value: bar
      selector:
        matchLabels:
          app: nginx

- name: "Container with sensitive env name"
  pass: false
  message: "Container could be storing sensitive data as environment variable"
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              env:
                - name: foo
                  value: bar
                - name: key
                  value: bar
      selector:
        matchLabels:
          app: nginx

- name: "Container with sensitive env value"
  pass: false
  message: "Container could be storing sensitive data as environment variable"
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              env:
                - name: foo
                  value: "Bearer token"
      selector:
        matchLabels:
          app: nginx
